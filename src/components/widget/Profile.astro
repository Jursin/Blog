---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import ImageWrapper from "../misc/ImageWrapper.astro";

const config = profileConfig;
const umamiShareId = profileConfig.umami?.shareId || "";
const umamiRegion = profileConfig.umami?.region || "us";
---
<div class="card-base p-3">
    <div class="card-base p-3 relative">
        <ImageWrapper 
            src={config.avatar || ""} 
            alt="Profile Image of the Author" 
            class="mx-auto lg:w-full h-full lg:mt-0 rounded-full border"
        ></ImageWrapper>
        <div 
            class="status-indicator absolute bottom-2 right-2 bg-white dark:bg-neutral-800 rounded-full border-2 border-white dark:border-neutral-800 p-1 shadow-md flex items-center overflow-hidden transition-all duration-300 ease-in-out hover:w-auto hover:px-3 hover:gap-2"
        >
            <span class="text-2xl">üå¥</span>
            <span class="status-text text-sm font-medium text-neutral-600 dark:text-neutral-300 whitespace-nowrap opacity-0 transition-opacity duration-200">ÊîæÂÅá‰∏≠</span>
        </div>
    </div>
    <div class="px-2">
        <div class="typewriter-container">
          <div class="typewriter-text">
            <span class="greeting dark:text-neutral-50" >Hi, I'm&nbsp;</span>
            <span class="name">{config.name}</span>
            <span class="cursor">|</span>
          </div>
        </div>
        <div class="h-1 w-10 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="flex items-center justify-center gap-4 h-full mb-3 flex-wrap">
            <div class="flex items-center gap-2 bg-neutral-100 dark:bg-neutral-800 px-3 py-1 rounded-lg">
                <iconify-icon icon="mdi:location" width="1.1em" height="1.1em" class="text-neutral-600 dark:text-neutral-300"></iconify-icon>
                <div class="text-neutral-400 transition">{config.location}</div>
            </div>
            <div class="flex items-center gap-2 bg-neutral-100 dark:bg-neutral-800 px-3 py-1 rounded-lg">
                <iconify-icon icon="ep:school" width="1.1em" height="1.1em" class="text-neutral-600 dark:text-neutral-300"></iconify-icon>
                <div class="text-neutral-400 transition">{config.company}</div>
            </div>
        </div>
        <div class="flex gap-2 justify-center mb-1 flex-wrap">
            {config.links.length > 1 && config.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {config.links.length == 1 && <a rel="me" aria-label={config.links[0].name} href={config.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
                {config.links[0].name}
            </a>}
        </div>
        {config.umami?.enable && (
          <>
            <div class="text-sm text-gray-500 mt-2 text-center">
              <Icon name="fa6-solid:eye" class="inline-block mr-1 text-gray-400 text-sm align-middle" />
              ÊµèËßàÈáèÔºö<span id="umami-pageviews">-</span>Ôºå
              ËÆøÈóÆÊ¨°Êï∞Ôºö<span id="umami-visits">-</span>
            </div>
            <script is:inline define:vars={{umamiShareId, umamiRegion}}>
              const fetchUmamiStats = async () => {
                try {
                  const shareId = umamiShareId;
                  const region = umamiRegion;
                  console.log('Profile shareId:', shareId, 'region:', region);
                  
                  const shareRes = await fetch(`https://${region}.umami.is/api/share/${shareId}`);
                  console.log('Profile shareRes status:', shareRes.status);
                  
                  if (!shareRes.ok) {
                    throw new Error(`Share API failed: ${shareRes.status}`);
                  }
                  
                  const shareData = await shareRes.json();
                  console.log('Profile shareData:', shareData);
                  const token = shareData.token;
                  const websiteId = shareData.websiteId || shareData.website_id || shareData.id;
                  console.log('Profile token:', token, 'websiteId:', websiteId);
                  
                  const url = `https://${region}.umami.is/api/websites/${websiteId}/stats?` +
                    new URLSearchParams({
                      startAt: '1753333200000',
                      endAt: Date.now(),
                      unit: 'hour',
                      timezone: 'Asia/Shanghai',
                      url: '/',
                      compare: 'false',
                    });
                  console.log('Profile statsUrl:', url);
                  
                  const res = await fetch(url, {
                    method: 'GET',
                    headers: {
                      'x-umami-share-token': token,
                    },
                  });
                  console.log('Profile stats res status:', res.status);
                  
                  const data = await res.json();
                  console.log('Profile stats data:', data);
                  
                  if (res.ok) {
                    const pageviews = data?.pageviews?.value ?? 'N/A';
                    const visits = data?.visits?.value ?? 'N/A';
                    document.getElementById('umami-pageviews').textContent = pageviews;
                    document.getElementById('umami-visits').textContent = visits;
                  } else {
                    document.getElementById('umami-pageviews').textContent = 'N/A';
                    document.getElementById('umami-visits').textContent = 'N/A';
                  }
                } catch (error) {
                  console.error('Profile Umami stats error:', error);
                  document.getElementById('umami-pageviews').textContent = 'Error';
                  document.getElementById('umami-visits').textContent = 'Error';
                }
              };
              fetchUmamiStats();
            </script>
          </>
        )}
    </div>
</div>

<style>
.typewriter-container {
  text-align: center;
}

.typewriter-text {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
}

.greeting {
  font-weight: bold;
  font-size: 2rem;
  display: inline;
}

.name {
  color: #53A3F2;
  font-weight: bold;
  font-size: 2rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
  animation: typing 3s steps(30, end);
  overflow: hidden;
  white-space: nowrap;
  margin: 0;
  display: inline;
}

.cursor {
  font-weight: bold;
  font-size: 2.5rem;
  color: #53A3F2;
  animation: blink 0.75s step-end infinite;
  display: inline;
}

.status-indicator {
  width: 40px;
  height: 40px;
  cursor: pointer;
}

.status-indicator:hover, .status-indicator:active {
  border-radius: 9999px !important;
  width: auto !important;
}

.status-indicator:hover .status-text, .status-indicator:active .status-text {
  opacity: 1 !important;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink {
  from, to { opacity: 1 }
  50% { opacity: 0 }
}
</style>